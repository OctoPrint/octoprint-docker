name: OctoPrint Release

on:
  repository_dispatch:
    types:
      - release
      - prerelease

jobs:
  buildx:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tags: ['latest', '%X%', '%X.Y%', '%X.Y.Z%']

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Tagging strategy
        id: tagging
        uses: HackerHappyHour/tagging-strategy@1.0.0
        with:
          tag_name: "${{ github.event.client_payload.tag_name }}"
          pattern: "${{ matrix.tags}}"

      - name: Set up Docker Buildx
        id: setup
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      
      - name: Docker Login
        id: login
        run: |
          echo ${{ secrets.DOCKER_PASSWORD}} | docker login -u ${{ secrets.DOCKER_USERNAME}} --password-stdin

      - name: Build and Deploy
        id: build_deploy
        run: |
          docker buildx build --push \
            --platform linux/arm64,linux/amd64,linux/arm/v7 \
            --cache-from docker.io/octoprint/octoprint:cache \
            --cache-to docker.io/octoprint/octoprint:cache \
            --build-arg PYTHON_BASE_IMAGE=3.8-slim-buster \
            --build-arg tag=${{ github.event.client_payload.tag_name }} \
            --progress plain -t octoprint/octoprint:${{ steps.tagging.outputs.tag }} .
